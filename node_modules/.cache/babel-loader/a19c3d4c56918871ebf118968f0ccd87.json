{"ast":null,"code":"var _jsxFileName = \"/home/adalaber/Adalab/evaluaciones/modulo-3-evaluacion-intermedia-AleDiUrr/src/components/App.js\",\n    _s = $RefreshSig$();\n\n// import phrasesFriends from '../data/phrases.json';\nimport { useState, useEffect } from 'react';\nimport getQuotes from '../services/fetchQuotes'; // import localStorage from '../services/localStorage';\n\nimport '../styles/App.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const [data, setData] = useState(localStorage.get('data', []));\n  const [data, setData] = useState([]);\n  const [newQuote, setNewQuote] = useState({\n    quote: '',\n    character: ''\n  });\n  const [filterQuote, setFilterQuote] = useState('');\n  const [filterCharacter, setFilterCharacter] = useState('everybody'); // useEffect(() => {\n  //   if (data.length === 0) {\n  //     getQuotes().then((datafromAPI) => {\n  //       localStorage.set('data', datafromAPI);\n  //       setData(datafromAPI);\n  //     });\n  //   }\n  // }, []);\n\n  useEffect(() => getQuotes().then(dataFromApi => {\n    setData(dataFromApi);\n  }), []);\n\n  const handleFilterCharacter = event => {\n    setFilterCharacter(event.target.value);\n  };\n\n  const handleFilterQuote = event => {\n    setFilterQuote(event.target.value);\n  };\n\n  const handleNewQuote = event => {\n    setNewQuote({ ...newQuote,\n      [event.target.id]: event.target.value\n    });\n  };\n\n  const handleClick = event => {\n    event.preventDefault();\n    setData([...data, newQuote]);\n    setNewQuote({\n      quote: '',\n      character: ''\n    });\n  };\n\n  const htmlData = data.filter(oneCharacter => {\n    if (filterCharacter === 'everybody') {\n      return true;\n    } else if (filterCharacter === oneCharacter.character) {\n      return true;\n    } else {\n      return false;\n    }\n  }).filter(oneQuote => {\n    return oneQuote.quote.toLocaleLowerCase().includes(filterQuote.toLocaleLowerCase());\n  }).map((character, i) => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\\"\", character.quote, \"\\\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: character.character\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: htmlData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"A\\xF1ade una nueva frase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"quote\",\n          children: [\"Frase\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"quote\",\n            id: \"quote\",\n            value: newQuote.quote,\n            onChange: handleNewQuote\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"character\",\n          children: [\"Personaje\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"character\",\n            id: \"character\",\n            value: newQuote.character,\n            onChange: handleNewQuote\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"new-contact__btn\",\n          type: \"submit\",\n          value: \"A\\xF1adir una nueva frase\",\n          onClick: handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: \" Frases de Friends \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"Osg34zcUlRWROb7ws0hFBk8F2qM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/adalaber/Adalab/evaluaciones/modulo-3-evaluacion-intermedia-AleDiUrr/src/components/App.js"],"names":["useState","useEffect","getQuotes","App","data","setData","newQuote","setNewQuote","quote","character","filterQuote","setFilterQuote","filterCharacter","setFilterCharacter","then","dataFromApi","handleFilterCharacter","event","target","value","handleFilterQuote","handleNewQuote","id","handleClick","preventDefault","htmlData","filter","oneCharacter","oneQuote","toLocaleLowerCase","includes","map","i"],"mappings":"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","sourcesContent":["// import phrasesFriends from '../data/phrases.json';\nimport { useState, useEffect } from 'react';\nimport getQuotes from '../services/fetchQuotes';\n// import localStorage from '../services/localStorage';\nimport '../styles/App.scss';\n\nfunction App() {\n  // const [data, setData] = useState(localStorage.get('data', []));\n  const [data, setData] = useState([]);\n  const [newQuote, setNewQuote] = useState({\n    quote: '',\n    character: '',\n  });\n  const [filterQuote, setFilterQuote] = useState('');\n  const [filterCharacter, setFilterCharacter] = useState('everybody');\n\n  // useEffect(() => {\n  //   if (data.length === 0) {\n  //     getQuotes().then((datafromAPI) => {\n  //       localStorage.set('data', datafromAPI);\n  //       setData(datafromAPI);\n  //     });\n  //   }\n  // }, []);\n\n  useEffect(\n    () =>\n      getQuotes().then((dataFromApi) => {\n        setData(dataFromApi);\n      }),\n    []\n  );\n\n  const handleFilterCharacter = (event) => {\n    setFilterCharacter(event.target.value);\n  };\n\n  const handleFilterQuote = (event) => {\n    setFilterQuote(event.target.value);\n  };\n\n  const handleNewQuote = (event) => {\n    setNewQuote({\n      ...newQuote,\n      [event.target.id]: event.target.value,\n    });\n  };\n\n  const handleClick = (event) => {\n    event.preventDefault();\n    setData([...data, newQuote]);\n    setNewQuote({\n      quote: '',\n      character: '',\n    });\n  };\n\n  const htmlData = data\n\n    .filter((oneCharacter) => {\n      if (filterCharacter === 'everybody') {\n        return true;\n      } else if (filterCharacter === oneCharacter.character) {\n        return true;\n      } else {\n        return false;\n      }\n    })\n\n    .filter((oneQuote) => {\n      return oneQuote.quote\n        .toLocaleLowerCase()\n        .includes(filterQuote.toLocaleLowerCase());\n    })\n\n    .map((character, i) => {\n      return (\n        <li key={i}>\n          <p>\n            \"{character.quote}\" <strong>{character.character}</strong>\n          </p>\n        </li>\n      );\n    });\n\n  return (\n    <>\n      <main>\n        <ul>{htmlData}</ul>\n        <form>\n          <h2>Añade una nueva frase</h2>\n          <label htmlFor=\"quote\">\n            Frase\n            <input\n              type=\"text\"\n              name=\"quote\"\n              id=\"quote\"\n              value={newQuote.quote}\n              onChange={handleNewQuote}\n            />\n          </label>\n          <label htmlFor=\"character\">\n            Personaje\n            <input\n              type=\"text\"\n              name=\"character\"\n              id=\"character\"\n              value={newQuote.character}\n              onChange={handleNewQuote}\n            />\n          </label>\n          <input\n            className=\"new-contact__btn\"\n            type=\"submit\"\n            value=\"Añadir una nueva frase\"\n            onClick={handleClick}\n          />\n        </form>\n      </main>\n      <footer> Frases de Friends </footer>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}