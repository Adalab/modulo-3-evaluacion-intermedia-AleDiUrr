{"ast":null,"code":"import _toConsumableArray from\"/home/adalaber/modulo-3-evaluacion-intermedia-AleDiUrr/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _defineProperty from\"/home/adalaber/modulo-3-evaluacion-intermedia-AleDiUrr/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/home/adalaber/modulo-3-evaluacion-intermedia-AleDiUrr/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/adalaber/modulo-3-evaluacion-intermedia-AleDiUrr/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import phrasesFriends from'../data/phrases.json';import{useState,useEffect}from'react';import getQuotes from'../services/fetchQuotes';import localStorage from'../services/localStorage';import'../styles/App.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function App(){// const [data, setData] = useState(localStorage.get('quotes', []));\nvar _useState=useState(phrasesFriends),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState({quote:'',character:''}),_useState4=_slicedToArray(_useState3,2),newQuote=_useState4[0],setNewQuote=_useState4[1];// useEffect(() => {\n//   if (data.length === 0) {\n//     getQuotes().then((data) => {\n//       localStorage.set('quotes', data);\n//       setData(data);\n//     });\n//   }\n// }, []);\nvar handleNewQuote=function handleNewQuote(event){setNewQuote(_objectSpread(_objectSpread({},newQuote),{},_defineProperty({},event.target.id,event.target.value)));};var handleClick=function handleClick(event){event.preventDefault();setData([].concat(_toConsumableArray(data),[newQuote]));};var htmlData=data.map(function(character,i){return/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(\"p\",{children:[character.quote,/*#__PURE__*/_jsx(\"strong\",{children:character.character})]})},i);});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"header\",{children:/*#__PURE__*/_jsx(\"h1\",{children:\"Frases de Friends.\"})}),/*#__PURE__*/_jsxs(\"main\",{children:[/*#__PURE__*/_jsx(\"ul\",{children:htmlData}),/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"A\\xF1ade una nueva frase\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"quote\",children:\"Frase\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"quote\",id:\"quote\",value:newQuote.quote,onChange:handleNewQuote}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"character\",children:\"Personaje\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"character\",id:\"character\",value:newQuote.character,onChange:handleNewQuote}),/*#__PURE__*/_jsx(\"input\",{className:\"new-contact__btn\",type:\"submit\",value:\"A\\xF1adir una nueva frase\",onClick:handleClick})]})]})]});}export default App;","map":{"version":3,"sources":["/home/adalaber/modulo-3-evaluacion-intermedia-AleDiUrr/src/components/App.js"],"names":["phrasesFriends","useState","useEffect","getQuotes","localStorage","App","data","setData","quote","character","newQuote","setNewQuote","handleNewQuote","event","target","id","value","handleClick","preventDefault","htmlData","map","i"],"mappings":"yjBAAA,MAAOA,CAAAA,cAAP,KAA2B,sBAA3B,CACA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,0BAAzB,CACA,MAAO,oBAAP,C,6IAEA,QAASC,CAAAA,GAAT,EAAe,CACb;AACA,cAAwBJ,QAAQ,CAACD,cAAD,CAAhC,wCAAOM,IAAP,eAAaC,OAAb,eACA,eAAgCN,QAAQ,CAAC,CACvCO,KAAK,CAAE,EADgC,CAEvCC,SAAS,CAAE,EAF4B,CAAD,CAAxC,yCAAOC,QAAP,eAAiBC,WAAjB,eAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAW,CAChCF,WAAW,gCACND,QADM,wBAERG,KAAK,CAACC,MAAN,CAAaC,EAFL,CAEUF,KAAK,CAACC,MAAN,CAAaE,KAFvB,GAAX,CAID,CALD,CAOA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACJ,KAAD,CAAW,CAC7BA,KAAK,CAACK,cAAN,GACAX,OAAO,8BAAKD,IAAL,GAAWI,QAAX,GAAP,CACD,CAHD,CAKA,GAAMS,CAAAA,QAAQ,CAAGb,IAAI,CAACc,GAAL,CAAS,SAACX,SAAD,CAAYY,CAAZ,CAAkB,CAC1C,mBACE,iCACE,qBACGZ,SAAS,CAACD,KADb,cAEE,wBAASC,SAAS,CAACA,SAAnB,EAFF,GADF,EAASY,CAAT,CADF,CAQD,CATgB,CAAjB,CAWA,mBACE,wCACE,qCACE,0CADF,EADF,cAKE,qCACE,oBAAKF,QAAL,EADF,cAEE,qCACE,gDADF,cAEE,cAAO,OAAO,CAAC,OAAf,mBAFF,cAGE,cACE,IAAI,CAAC,MADP,CAEE,IAAI,CAAC,OAFP,CAGE,EAAE,CAAC,OAHL,CAIE,KAAK,CAAET,QAAQ,CAACF,KAJlB,CAKE,QAAQ,CAAEI,cALZ,EAHF,cAWE,cAAO,OAAO,CAAC,WAAf,uBAXF,cAYE,cACE,IAAI,CAAC,MADP,CAEE,IAAI,CAAC,WAFP,CAGE,EAAE,CAAC,WAHL,CAIE,KAAK,CAAEF,QAAQ,CAACD,SAJlB,CAKE,QAAQ,CAAEG,cALZ,EAZF,cAoBE,cACE,SAAS,CAAC,kBADZ,CAEE,IAAI,CAAC,QAFP,CAGE,KAAK,CAAC,2BAHR,CAIE,OAAO,CAAEK,WAJX,EApBF,GAFF,GALF,GADF,CAsCD,CAED,cAAeZ,CAAAA,GAAf","sourcesContent":["import phrasesFriends from '../data/phrases.json';\nimport { useState, useEffect } from 'react';\nimport getQuotes from '../services/fetchQuotes';\nimport localStorage from '../services/localStorage';\nimport '../styles/App.scss';\n\nfunction App() {\n  // const [data, setData] = useState(localStorage.get('quotes', []));\n  const [data, setData] = useState(phrasesFriends);\n  const [newQuote, setNewQuote] = useState({\n    quote: '',\n    character: '',\n  });\n\n  // useEffect(() => {\n  //   if (data.length === 0) {\n  //     getQuotes().then((data) => {\n  //       localStorage.set('quotes', data);\n  //       setData(data);\n  //     });\n  //   }\n  // }, []);\n\n  const handleNewQuote = (event) => {\n    setNewQuote({\n      ...newQuote,\n      [event.target.id]: event.target.value,\n    });\n  };\n\n  const handleClick = (event) => {\n    event.preventDefault();\n    setData([...data, newQuote]);\n  };\n\n  const htmlData = data.map((character, i) => {\n    return (\n      <li key={i}>\n        <p>\n          {character.quote}\n          <strong>{character.character}</strong>\n        </p>\n      </li>\n    );\n  });\n\n  return (\n    <>\n      <header>\n        <h1>Frases de Friends.</h1>\n      </header>\n\n      <main>\n        <ul>{htmlData}</ul>\n        <form>\n          <h2>Añade una nueva frase</h2>\n          <label htmlFor=\"quote\">Frase</label>\n          <input\n            type=\"text\"\n            name=\"quote\"\n            id=\"quote\"\n            value={newQuote.quote}\n            onChange={handleNewQuote}\n          />\n\n          <label htmlFor=\"character\">Personaje</label>\n          <input\n            type=\"text\"\n            name=\"character\"\n            id=\"character\"\n            value={newQuote.character}\n            onChange={handleNewQuote}\n          />\n\n          <input\n            className=\"new-contact__btn\"\n            type=\"submit\"\n            value=\"Añadir una nueva frase\"\n            onClick={handleClick}\n          />\n        </form>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}